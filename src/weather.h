#ifndef CRYPTID_WEATHER_SYMBOL_H
#define CRYPTID_WEATHER_SYMBOL_H

#include <map>

#include "types.h"
#include "gfx.h"

/**
 * @brief Weather condition codes from Weather API.
 *
 * @see https://www.weatherapi.com/docs/weather_conditions.json
 */
typedef enum {
  WEATHER_CODE_UNKNOWN = 0,

  // OpenWeatherMap

  WEATHER_CODE_OWM_THUNDERSTORM_WITH_LIGHT_RAIN = 200,
  WEATHER_CODE_OWM_THUNDERSTORM_WITH_RAIN = 201,
  WEATHER_CODE_OWM_THUNDERSTORM_WITH_HEAVY_RAIN = 202,
  WEATHER_CODE_OWM_LIGHT_THUNDERSTORM = 210,
  WEATHER_CODE_OWM_THUNDERSTORM = 211,
  WEATHER_CODE_OWM_HEAVY_THUNDERSTORM = 212,
  WEATHER_CODE_OWM_RAGGED_THUNDERSTORM = 221,
  WEATHER_CODE_OWM_THUNDERSTORM_WITH_LIGHT_DRIZZLE = 230,
  WEATHER_CODE_OWM_THUNDERSTORM_WITH_DRIZZLE = 231,
  WEATHER_CODE_OWM_THUNDERSTORM_WITH_HEAVY_DRIZZLE = 232,

  WEATHER_CODE_OWM_LIGHT_INTENSITY_DRIZZLE = 300,
  WEATHER_CODE_OWM_DRIZZLE = 301,
  WEATHER_CODE_OWM_HEAVY_INTENSITY_DRIZZLE = 302,
  WEATHER_CODE_OWM_LIGHT_INTENSITY_DRIZZLE_RAIN = 310,
  WEATHER_CODE_OWM_DRIZZLE_RAIN = 311,
  WEATHER_CODE_OWM_HEAVY_INTENSITY_DRIZZLE_RAIN = 312,
  WEATHER_CODE_OWM_SHOWER_RAIN_DRIZZLE = 313,
  WEATHER_CODE_OWM_HEAVY_SHOWER_RAIN_DRIZZLE = 314,
  WEATHER_CODE_OWM_SHOWER_DRIZZLE = 321,

  WEATHER_CODE_OWM_LIGHT_RAIN = 500,
  WEATHER_CODE_OWM_MODERATE_RAIN = 501,
  WEATHER_CODE_OWM_HEAVY_INTENSITY_RAIN = 502,
  WEATHER_CODE_OWM_VERY_HEAVY_RAIN = 503,
  WEATHER_CODE_OWM_EXTREME_RAIN = 504,
  WEATHER_CODE_OWM_FREEZING_RAIN = 511,
  WEATHER_CODE_OWM_LIGHT_INTENSITY_SHOWER_RAIN = 520,
  WEATHER_CODE_OWM_SHOWER_RAIN = 521,
  WEATHER_CODE_OWM_HEAVY_INTENSITY_SHOWER_RAIN = 522,
  WEATHER_CODE_OWM_RAGGED_SHOWER_RAIN = 531,

  WEATHER_CODE_OWM_LIGHT_SNOW = 600,
  WEATHER_CODE_OWM_SNOW = 601,
  WEATHER_CODE_OWM_HEAVY_SNOW = 602,
  WEATHER_CODE_OWM_SLEET = 611,
  WEATHER_CODE_OWM_LIGHT_SHOWER_SLEET = 612,
  WEATHER_CODE_OWM_SHOWER_SLEET = 613,
  WEATHER_CODE_OWM_LIGHT_RAIN_SNOW = 615,
  WEATHER_CODE_OWM_RAIN_SNOW = 616,
  WEATHER_CODE_OWM_LIGHT_SHOWER_SNOW = 620,
  WEATHER_CODE_OWM_SHOWER_SNOW = 621,
  WEATHER_CODE_OWM_HEAVY_SHOWER_SNOW = 622,

  WEATHER_CODE_OWM_MIST = 700,
  WEATHER_CODE_OWM_SMOKE = 711,
  WEATHER_CODE_OWM_HAZE = 721,
  WEATHER_CODE_OWM_SAND_DUST = 731,
  WEATHER_CODE_OWM_FOG = 741,
  WEATHER_CODE_OWM_SAND = 751,
  WEATHER_CODE_OWM_DUST = 761,
  WEATHER_CODE_OWM_VOLCANIC_ASH = 762,
  WEATHER_CODE_OWM_SQUALLS = 771,
  WEATHER_CODE_OWM_TORNADO = 781,

  WEATHER_CODE_OWM_CLEAR = 800,
  WEATHER_CODE_OWM_FEW_CLOUDS = 801,
  WEATHER_CODE_OWM_SCATTERED_CLOUDS = 802,
  WEATHER_CODE_OWM_BROKEN_CLOUDS = 803,
  WEATHER_CODE_OWM_OVERCAST_CLOUDS = 804,

  // Weather API

  WEATHER_CODE_CLEAR = 1000,
  WEATHER_CODE_PARTLY_CLOUDY = 1003,
  WEATHER_CODE_CLOUDY = 1006,
  WEATHER_CODE_OVERCAST = 1009,
  WEATHER_CODE_MIST = 1030,
  WEATHER_CODE_PATCHY_RAIN_POSSIBLE = 1063,
  WEATHER_CODE_PATCHY_SNOW_POSSIBLE = 1066,
  WEATHER_CODE_PATCHY_SLEET_POSSIBLE = 1069,
  WEATHER_CODE_PATCHY_FREEZING_DRIZZLE_POSSIBLE = 1072,
  WEATHER_CODE_THUNDERY_OUTBREAKS_POSSIBLE = 1087,
  WEATHER_CODE_BLOWING_SNOW = 1114,
  WEATHER_CODE_BLIZZARD = 1117,
  WEATHER_CODE_FOG = 1135,
  WEATHER_CODE_FREEZING_FOG = 1147,
  WEATHER_CODE_PATCHY_LIGHT_DRIZZLE = 1150,
  WEATHER_CODE_LIGHT_DRIZZLE = 1153,
  WEATHER_CODE_FREEZING_DRIZZLE = 1168,
  WEATHER_CODE_HEAVY_FREEZING_DRIZZLE = 1171,
  WEATHER_CODE_PATCHY_LIGHT_RAIN = 1180,
  WEATHER_CODE_LIGHT_RAIN = 1183,
  WEATHER_CODE_MODERATE_RAIN_AT_TIMES = 1186,
  WEATHER_CODE_MODERATE_RAIN = 1189,
  WEATHER_CODE_HEAVY_RAIN_AT_TIMES = 1192,
  WEATHER_CODE_HEAVY_RAIN = 1195,
  WEATHER_CODE_LIGHT_FREEZING_RAIN = 1198,
  WEATHER_CODE_MODERATE_OR_HEAVY_FREEZING_RAIN = 1201,
  WEATHER_CODE_LIGHT_SLEET = 1204,
  WEATHER_CODE_MODERATE_OR_HEAVY_SLEET = 1207,
  WEATHER_CODE_PATCHY_LIGHT_SNOW = 1210,
  WEATHER_CODE_LIGHT_SNOW = 1213,
  WEATHER_CODE_PATCHY_MODERATE_SNOW = 1216,
  WEATHER_CODE_MODERATE_SNOW = 1219,
  WEATHER_CODE_PATCHY_HEAVY_SNOW = 1222,
  WEATHER_CODE_HEAVY_SNOW = 1225,
  WEATHER_CODE_ICE_PELLETS = 1237,
  WEATHER_CODE_LIGHT_RAIN_SHOWER = 1240,
  WEATHER_CODE_MODERATE_OR_HEAVY_RAIN_SHOWER = 1243,
  WEATHER_CODE_TORRENTIAL_RAIN_SHOWER = 1246,
  WEATHER_CODE_LIGHT_SLEET_SHOWERS = 1249,
  WEATHER_CODE_MODERATE_OR_HEAVY_SLEET_SHOWERS = 1252,
  WEATHER_CODE_LIGHT_SNOW_SHOWERS = 1255,
  WEATHER_CODE_MODERATE_OR_HEAVY_SNOW_SHOWERS = 1258,
  WEATHER_CODE_LIGHT_SHOWERS_OF_ICE_PELLETS = 1261,
  WEATHER_CODE_MODERATE_OR_HEAVY_SHOWERS_OF_ICE_PELLETS = 1264,
  WEATHER_CODE_PATCHY_LIGHT_RAIN_WITH_THUNDER = 1273,
  WEATHER_CODE_MODERATE_OR_HEAVY_RAIN_WITH_THUNDER = 1276,
  WEATHER_CODE_PATCHY_LIGHT_SNOW_WITH_THUNDER = 1279,
  WEATHER_CODE_MODERATE_OR_HEAVY_SNOW_WITH_THUNDER = 1282,

} weather_code_t;

/**
 * @brief The current weather.
 */
typedef struct weather_t {
  float temp_c = 0;
  float temp_f = 0;
  float feelslike_c = 0;
  float feelslike_f = 0;
  uint8_t humidity = 0;
  weather_code_t code = WEATHER_CODE_UNKNOWN;
  bool is_day = true;
  uint16_t aqi = 0;
  int temp_last = 0;
  int feelslike_last = 0;
  int humidity_last = 0;
  int code_last = 0;
  int is_day_last = 0;
  int aqi_last = 0;
} weather_t;

class WeatherSymbol {
  public:
    /**
     * @brief Construct a new WeatherSymbol object
     * 
     * @param gfx_p A pointer to the graphics object.
     */
    WeatherSymbol(Gfx *gfx_p);

    /**
     * @brief Update the gradient image (run each frame).
     */
    void drawSymbolInterior(void);

    /**
     * @brief Draw symbol from condition code.
     */
    void drawSymbol(weather_code_t code, bool is_day = true);

  private:
    /**
     * @brief A pointer to the graphics object.
     */
    Gfx *gfx;

    /**
     * @brief X position.
     */
    uint8_t x = 37;

    /**
     * @brief Y position.
     */
    uint8_t y = 1;
};

#endif
