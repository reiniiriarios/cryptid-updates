#include "weather.h"
#include "gfx.h"

const int SYMBOL_W = 24;
const int SYMBOL_H = 24;

uint8_t WEATHER_MASK_UNKNOWN[SYMBOL_W * SYMBOL_H] = {
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
  0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,
  0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,
  0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,
  0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,
  0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,
  0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
};
pixel_mask_t WEATHER_PMASK_UNKNOWN = {WEATHER_MASK_UNKNOWN, SYMBOL_W, SYMBOL_H};
gradient_config_t WEATHER_GCFG_UNKNOWN = { 10, 32, 16, 0, 10, false };

uint8_t WEATHER_MASK_SUN[SYMBOL_W * SYMBOL_H] = {
  0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,
  0,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,
  0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,
  0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,
  0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
  1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,
  1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,
  0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
  0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,
  0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,
  0,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,
  0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
};
pixel_mask_t WEATHER_PMASK_SUN = {WEATHER_MASK_SUN, SYMBOL_W, SYMBOL_H};
gradient_config_t WEATHER_GCFG_SUN = { 10, 32, 16, 60, 80, false };

uint8_t WEATHER_MASK_CLOUDY_SUN[SYMBOL_W * SYMBOL_H] = {
  0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,
  0,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,
  0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,
  0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,
  0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
  1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,0,
  1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,0,
  0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,1,1,0,0,0,1,1,0,
  0,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,1,1,0,0,0,0,1,0,
  0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,
  0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,
  0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
  0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,
  0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
  0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,
  0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
};
pixel_mask_t WEATHER_PMASK_CLOUDY_SUN = {WEATHER_MASK_SUN, SYMBOL_W, SYMBOL_H};
gradient_config_t WEATHER_GCFG_CLOUDY_SUN = { 10, 32, 16, 50, 60, false };

uint8_t WEATHER_MASK_CLOUDY[SYMBOL_W * SYMBOL_H] = {
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,
  0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
  0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,
  0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
  0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,
  0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,
  1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
  1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,
  0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,
  0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,
  0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
};
pixel_mask_t WEATHER_PMASK_CLOUDY = {WEATHER_MASK_SUN, SYMBOL_W, SYMBOL_H};
gradient_config_t WEATHER_GCFG_CLOUDY = { 10, 32, 16, 80, 100, false };

std::map<weather_symbol_t, pixel_mask_t> WEATHER_PIXEL_MASKS = {
  {WEATHER_SYMBOL_UNKNOWN, WEATHER_PMASK_UNKNOWN},
  {WEATHER_SYMBOL_INT, WEATHER_PMASK_UNKNOWN},
  {WEATHER_SYMBOL_SUN, WEATHER_PMASK_SUN},
  {WEATHER_SYMBOL_MOON, WEATHER_PMASK_UNKNOWN},
  {WEATHER_SYMBOL_CLOUDY, WEATHER_PMASK_CLOUDY},
  {WEATHER_SYMBOL_CLOUDY_SUN, WEATHER_PMASK_CLOUDY_SUN},
  {WEATHER_SYMBOL_CLOUDY_MOON, WEATHER_PMASK_UNKNOWN},
  {WEATHER_SYMBOL_OVERCAST, WEATHER_PMASK_UNKNOWN},
  {WEATHER_SYMBOL_RAIN, WEATHER_PMASK_UNKNOWN},
  {WEATHER_SYMBOL_SNOW, WEATHER_PMASK_UNKNOWN},
  {WEATHER_SYMBOL_SLEET, WEATHER_PMASK_UNKNOWN},
  {WEATHER_SYMBOL_LIGHTNING, WEATHER_PMASK_UNKNOWN},
  {WEATHER_SYMBOL_FOG, WEATHER_PMASK_UNKNOWN},
};

std::map<weather_symbol_t, gradient_config_t> WEATHER_GRADIENT_CONFIGS = {
  {WEATHER_SYMBOL_UNKNOWN, WEATHER_GCFG_UNKNOWN},
  {WEATHER_SYMBOL_INT, WEATHER_GCFG_UNKNOWN},
  {WEATHER_SYMBOL_SUN, WEATHER_GCFG_SUN},
  {WEATHER_SYMBOL_MOON, WEATHER_GCFG_UNKNOWN},
  {WEATHER_SYMBOL_CLOUDY, WEATHER_GCFG_CLOUDY},
  {WEATHER_SYMBOL_CLOUDY_SUN, WEATHER_GCFG_CLOUDY_SUN},
  {WEATHER_SYMBOL_CLOUDY_MOON, WEATHER_GCFG_UNKNOWN},
  {WEATHER_SYMBOL_OVERCAST, WEATHER_GCFG_UNKNOWN},
  {WEATHER_SYMBOL_RAIN, WEATHER_GCFG_UNKNOWN},
  {WEATHER_SYMBOL_SNOW, WEATHER_GCFG_UNKNOWN},
  {WEATHER_SYMBOL_SLEET, WEATHER_GCFG_UNKNOWN},
  {WEATHER_SYMBOL_LIGHTNING, WEATHER_GCFG_UNKNOWN},
  {WEATHER_SYMBOL_FOG, WEATHER_GCFG_UNKNOWN},
};

WeatherSymbol::WeatherSymbol(Gfx *gfx_p) {
  gfx = gfx_p;
}

void WeatherSymbol::update(weather_symbol_t symbol) {
  gfx->drawCircularGradientMask(&WEATHER_PIXEL_MASKS[symbol], 38, 4, &WEATHER_GRADIENT_CONFIGS[symbol]);
}

void WeatherSymbol::update(weather_code_t code) {
  update(getSymbol(code));
}

void WeatherSymbol::updateInterior(void) {
  update(WEATHER_SYMBOL_INT);
}

weather_symbol_t WeatherSymbol::getSymbol(weather_code_t code) {
  switch (code) {
    case WEATHER_CODE_CLEAR:
      //todo: moon by time of day
      return WEATHER_SYMBOL_SUN;
    case WEATHER_CODE_PARTLY_CLOUDY:
      //todo: moon by time of day
      return WEATHER_SYMBOL_CLOUDY_SUN;
    case WEATHER_CODE_CLOUDY:
    case WEATHER_CODE_OVERCAST:
      return WEATHER_SYMBOL_CLOUDY;
    case WEATHER_CODE_FOG:
    case WEATHER_CODE_MIST:
    case WEATHER_CODE_FREEZING_FOG:
      return WEATHER_SYMBOL_FOG;
    case WEATHER_CODE_HEAVY_RAIN:
    case WEATHER_CODE_LIGHT_RAIN:
    case WEATHER_CODE_PATCHY_RAIN_POSSIBLE:
    case WEATHER_CODE_PATCHY_LIGHT_RAIN:
    case WEATHER_CODE_PATCHY_LIGHT_DRIZZLE:
    case WEATHER_CODE_LIGHT_RAIN_SHOWER:
    case WEATHER_CODE_MODERATE_OR_HEAVY_RAIN_SHOWER:
    case WEATHER_CODE_TORRENTIAL_RAIN_SHOWER:
    case WEATHER_CODE_HEAVY_RAIN_AT_TIMES:
    case WEATHER_CODE_MODERATE_RAIN_AT_TIMES:
      return WEATHER_SYMBOL_RAIN;
    case WEATHER_CODE_HEAVY_SNOW:
    case WEATHER_CODE_MODERATE_SNOW:
    case WEATHER_CODE_MODERATE_OR_HEAVY_SNOW_SHOWERS:
    case WEATHER_CODE_LIGHT_SNOW:
    case WEATHER_CODE_LIGHT_SNOW_SHOWERS:
    case WEATHER_CODE_PATCHY_SNOW_POSSIBLE:
    case WEATHER_CODE_PATCHY_HEAVY_SNOW:
    case WEATHER_CODE_PATCHY_MODERATE_SNOW:
    case WEATHER_CODE_PATCHY_LIGHT_SNOW:
    case WEATHER_CODE_BLOWING_SNOW:
    case WEATHER_CODE_BLIZZARD:
      return WEATHER_SYMBOL_SNOW;
    case WEATHER_CODE_LIGHT_SLEET:
    case WEATHER_CODE_LIGHT_SLEET_SHOWERS:
    case WEATHER_CODE_MODERATE_OR_HEAVY_SLEET:
    case WEATHER_CODE_MODERATE_OR_HEAVY_SLEET_SHOWERS:
    case WEATHER_CODE_PATCHY_SLEET_POSSIBLE:
    case WEATHER_CODE_FREEZING_DRIZZLE:
    case WEATHER_CODE_PATCHY_FREEZING_DRIZZLE_POSSIBLE:
    case WEATHER_CODE_HEAVY_FREEZING_DRIZZLE:
    case WEATHER_CODE_LIGHT_FREEZING_RAIN:
    case WEATHER_CODE_MODERATE_OR_HEAVY_FREEZING_RAIN:
    case WEATHER_CODE_ICE_PELLETS:
    case WEATHER_CODE_LIGHT_SHOWERS_OF_ICE_PELLETS:
    case WEATHER_CODE_MODERATE_OR_HEAVY_SHOWERS_OF_ICE_PELLETS:
      return WEATHER_SYMBOL_SLEET;
    case WEATHER_CODE_THUNDERY_OUTBREAKS_POSSIBLE:
    case WEATHER_CODE_PATCHY_LIGHT_RAIN_WITH_THUNDER:
    case WEATHER_CODE_MODERATE_OR_HEAVY_RAIN_WITH_THUNDER:
    case WEATHER_CODE_PATCHY_LIGHT_SNOW_WITH_THUNDER:
    case WEATHER_CODE_MODERATE_OR_HEAVY_SNOW_WITH_THUNDER:
      return WEATHER_SYMBOL_LIGHTNING;
  }
  return WEATHER_SYMBOL_UNKNOWN;
}
